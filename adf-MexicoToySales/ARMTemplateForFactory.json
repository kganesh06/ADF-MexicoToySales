{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-MexicoToySales"
		},
		"ds_ablob_rawdata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ds_ablob_rawdata'"
		},
		"ls_ablob_dataset_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_dataset'"
		},
		"ls_ablob_rawdata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_rawdata'"
		},
		"ls_adls_rawdata_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_rawdata'"
		},
		"ls_asql_mexico_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_asql_mexico_db'"
		},
		"ls_adls_rawdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfpipelineadls.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copyTosql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls_processdata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": "2023-01-27T00:00:00.000Z",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copyTosql",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adls_processdata_copy",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_asql_data",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_processdata')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_processdata_copy')]",
				"[concat(variables('factoryId'), '/datasets/ds_asql_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Ingest_toySales_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy rawData to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ablob_rawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_rawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ablob_rawdata')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_tranform_raw_to_processdata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data_cleaning_transformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "data_cleaning_transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"getProducts": {},
									"getSales": {},
									"getInventory": {},
									"getStores": {},
									"sinkSales": {},
									"sinkInventory": {},
									"sinkStores": {},
									"sinkproducts": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/data_cleaning_transformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ablob_rawdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawdatasets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_Inventory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inventory.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Store_ID",
						"type": "String"
					},
					{
						"name": "Product_ID",
						"type": "String"
					},
					{
						"name": "Stock_On_Hand",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processdata_copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "processdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processdata_inv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inventory.csv",
						"fileSystem": "processdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processdata_products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.txt",
						"fileSystem": "processdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processdata_sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales.txt",
						"fileSystem": "processdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processdata_stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "store.txt",
						"fileSystem": "processdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_prodcuts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Product_ID",
						"type": "String"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Category",
						"type": "String"
					},
					{
						"name": "Product_Cost",
						"type": "String"
					},
					{
						"name": "Product_Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_rawdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Sale_ID",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Store_ID",
						"type": "String"
					},
					{
						"name": "Product_ID",
						"type": "String"
					},
					{
						"name": "Units",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_store')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_rawdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "stores.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Store_ID",
						"type": "String"
					},
					{
						"name": "Store_Name",
						"type": "String"
					},
					{
						"name": "Store_City",
						"type": "String"
					},
					{
						"name": "Store_Location",
						"type": "String"
					},
					{
						"name": "Store_Open_Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_rawdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asql_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql_mexico_db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql_mexico_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asql_inv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql_mexico_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Store_ID",
						"type": "varchar"
					},
					{
						"name": "Product_ID",
						"type": "varchar"
					},
					{
						"name": "Stock_On_Hand",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "inventory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql_mexico_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asql_products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql_mexico_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Product_ID",
						"type": "varchar"
					},
					{
						"name": "Product_Name",
						"type": "varchar"
					},
					{
						"name": "Product_Category",
						"type": "varchar"
					},
					{
						"name": "Product_Cost",
						"type": "decimal",
						"precision": 3,
						"scale": 2
					},
					{
						"name": "Product_Price",
						"type": "decimal",
						"precision": 3,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Products"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql_mexico_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_asql_stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_asql_mexico_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Store_ID",
						"type": "varchar"
					},
					{
						"name": "Store_Name",
						"type": "varchar"
					},
					{
						"name": "Store_City",
						"type": "varchar"
					},
					{
						"name": "Store_Location",
						"type": "varchar"
					},
					{
						"name": "Store_Open_Date",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "store"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_asql_mexico_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ablob_rawdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ds_ablob_rawdata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_dataset')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_dataset_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_rawdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_rawdata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_rawdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_rawdata_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_rawdata_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_asql_mexico_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_asql_mexico_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_cleaning_transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_prodcuts",
								"type": "DatasetReference"
							},
							"name": "getProducts"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_sales",
								"type": "DatasetReference"
							},
							"name": "getSales"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_Inventory",
								"type": "DatasetReference"
							},
							"name": "getInventory"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_store",
								"type": "DatasetReference"
							},
							"name": "getStores"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_processdata_sales",
								"type": "DatasetReference"
							},
							"name": "sinkSales"
						},
						{
							"dataset": {
								"referenceName": "ds_asql_inv",
								"type": "DatasetReference"
							},
							"name": "sinkInventory"
						},
						{
							"dataset": {
								"referenceName": "ds_asql_stores",
								"type": "DatasetReference"
							},
							"name": "sinkStores"
						},
						{
							"dataset": {
								"referenceName": "ds_asql_products",
								"type": "DatasetReference"
							},
							"name": "sinkproducts"
						}
					],
					"transformations": [
						{
							"name": "removeNullValues"
						},
						{
							"name": "replacenulls"
						},
						{
							"name": "removeNullSales"
						},
						{
							"name": "joinwithproducts"
						},
						{
							"name": "selectcols"
						},
						{
							"name": "dateclean"
						},
						{
							"name": "totalcost"
						},
						{
							"name": "costPerSale"
						},
						{
							"name": "removeduplicates"
						},
						{
							"name": "changdatatypes"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Product_ID as string,",
						"          Product_Name as string,",
						"          Product_Category as string,",
						"          Product_Cost as double,",
						"          Product_Price as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> getProducts",
						"source(output(",
						"          Sale_ID as string,",
						"          Date as date 'dd/MM/yyyy',",
						"          Store_ID as short,",
						"          Product_ID as string,",
						"          Units as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> getSales",
						"source(output(",
						"          Store_ID as short,",
						"          Product_ID as short,",
						"          Stock_On_Hand as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> getInventory",
						"source(output(",
						"          Store_ID as short,",
						"          Store_Name as string,",
						"          Store_City as string,",
						"          Store_Location as string,",
						"          Store_Open_Date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> getStores",
						"getProducts filter(not(((isNull(Product_ID)) || isNull(Product_Name) || Product_ID==\"\" || Product_Name==\"\"))) ~> removeNullValues",
						"removeNullValues derive(Product_Cost = iif(isNull(Product_Cost), toDouble(0), Product_Cost)) ~> replacenulls",
						"getSales filter(not(isNull(Sale_ID) || Sale_ID==\"\")) ~> removeNullSales",
						"dateclean, replacenulls join(getSales@Product_ID == getProducts@Product_ID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinwithproducts",
						"joinwithproducts select(mapColumn(",
						"          Sale_ID,",
						"          Date,",
						"          Store_ID,",
						"          Product_ID = getSales@Product_ID,",
						"          Units,",
						"          Product_Cost,",
						"          Product_Price",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectcols",
						"removeNullSales derive(Date = toDate(regexReplace(toString(Date), '[a-zA-Z]+',''))) ~> dateclean",
						"selectcols derive(TotalSales = toDouble(Units) * Product_Price,",
						"          CostPerSale = toDouble(Units) * Product_Cost) ~> totalcost",
						"totalcost derive(ProfitPerSale = TotalSales - CostPerSale) ~> costPerSale",
						"getStores aggregate(groupBy(Store_ID),",
						"     each(match(name!='Store_ID'), $$ = first($$))) ~> removeduplicates",
						"replacenulls cast(output(",
						"          Product_ID as string,",
						"          Product_Name as string,",
						"          Product_Category as string,",
						"          Product_Cost as string,",
						"          Product_Price as string",
						"     ),",
						"     errors: true) ~> changdatatypes",
						"costPerSale sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     partitionFileNames:['sales.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkSales",
						"getInventory sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Store_ID as string,",
						"          Product_ID as string,",
						"          Stock_On_Hand as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     partitionBy('hash', 1),",
						"     preCommands: [],",
						"     postCommands: []) ~> sinkInventory",
						"removeduplicates sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Store_ID as string,",
						"          Store_Name as string,",
						"          Store_City as string,",
						"          Store_Location as string,",
						"          Store_Open_Date as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     partitionBy('hash', 1),",
						"     preCommands: [],",
						"     postCommands: []) ~> sinkStores",
						"changdatatypes sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Product_ID as string,",
						"          Product_Name as string,",
						"          Product_Category as string,",
						"          Product_Cost as decimal(3,2),",
						"          Product_Price as decimal(3,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkproducts"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_prodcuts')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_sales')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_Inventory')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_store')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_processdata_sales')]",
				"[concat(variables('factoryId'), '/datasets/ds_asql_inv')]",
				"[concat(variables('factoryId'), '/datasets/ds_asql_stores')]",
				"[concat(variables('factoryId'), '/datasets/ds_asql_products')]"
			]
		}
	]
}